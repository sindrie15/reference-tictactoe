/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = 'src/chat/Chat.js';exports.default =


function (injected) {

    const commandPort = injected('commandPort');
    const eventRouter = injected('eventRouter');
    const queryRouter = injected('queryRouter');

    const generateUUID = injected('generateUUID');

    class Chat extends /* istanbul ignore next */_react2.default.Component {
        constructor() {
            super();

            this.state = {
                messageList: [],
                stats: {} };



            this.sendChatMessage = this.sendChatMessage.bind(this);
            this.unsentMessageChanged = this.unsentMessageChanged.bind(this);
        }
        sendChatMessage() {
            //            console.debug("Sending command message on command port ", this.state.unsentMessage);
            //            socket.emit('issueCommand', );

            var cmdId = generateUUID();
            commandPort.routeMessage({ commandId: cmdId, type: "chatCommand", message: this.state.unsentMessage });
        }
        unsentMessageChanged(event) {
            this.setState({
                unsentMessage: event.target.value });

        }

        componentWillMount() {
            const chatMessageReceived = messageObj => {
                var messageList = this.state.messageList;
                messageList.push(messageObj);
                this.setState({
                    messageList: messageList });

            };
            eventRouter.on('chatMessageReceived', chatMessageReceived);
            queryRouter.on('chatHistoryResult', resultMessage => {
                /* istanbul ignore next */_lodash2.default.each(resultMessage.events, function (event) {
                    if (event.type === 'chatMessageReceived') {
                        chatMessageReceived(event);
                    }
                });
            });
            commandPort.routeMessage({ commandId: generateUUID(), type: "requestChatHistory" });
        }
        render() {

            var messages = /* istanbul ignore next */_lodash2.default.map(this.state.messageList, (message, idx) => {
                return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ key: idx, __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: this }, message.sender.userName, /* istanbul ignore next */' says ', message.message, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: this })));
            });

            return (
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'Chat', __source: { fileName: _jsxFileName, lineNumber: 63 }, __self: this },

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'textarea', /* istanbul ignore next */{ value: this.state.unsentMessage, onChange: this.unsentMessageChanged, __source: { fileName: _jsxFileName, lineNumber: 65 }, __self: this }),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 66 }, __self: this }),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ onClick: this.sendChatMessage, __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this }, /* istanbul ignore next */'Send message'),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: this }),

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 70 }, __self: this }),
                    messages,
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: this })));


        }}

    return Chat;
};var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_lodash = require('lodash'); /* istanbul ignore next */var _lodash2 = _interopRequireDefault(_lodash);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}